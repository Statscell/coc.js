{"version":3,"file":"Client.js","sourceRoot":"","sources":["../../src/lib/Client.ts"],"names":[],"mappings":"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","sourcesContent":["import fetch, { RequestInit } from 'node-fetch';\nimport { validateTag } from '../utils/utils';\nimport qs from 'querystring';\n\nexport class Client {\n\n\tpublic apiURL: string;\n\tpublic token: string;\n\n\tpublic constructor(options: ClientOptions) {\n\t\tthis.apiURL = options.apiURL || 'https://api.clashofclans.com/v1/';\n\t\tthis.token = options.token;\n\t}\n\n\tpublic player(playerTag: string): Promise<Player> {\n\t\tconst parsed = validateTag(playerTag);\n\t\treturn this.get(`players/${parsed}`);\n\t}\n\n\t/**\n\t * @example\n\t * // Search for clans by name\n\t * const clans = await client.clans('Tribe Gaming');\n\t *\n\t * // Search for clans by providing various options\n\t * const clans = await client.clans({ name: 'Tribe', limit: 1 });\n\t */\n\tpublic clans(options: string | ClanSearchOptions): Promise<Record<string, unknown>[]> {\n\t\tconst opts: ClanSearchOptions = typeof options === 'string' ? { name: 'options' } : options;\n\t\treturn this.get(`clans${this.query(opts)}`);\n\t}\n\n\t/**\n\t * @example\n\t * const clan = await client.clan('#')\n\t */\n\tpublic clan(clanTag: string): Promise<Record<string, unknown>> {\n\t\tconst parsed = validateTag(clanTag);\n\t\treturn this.get(`clans/${parsed}`);\n\t}\n\n\tpublic clanMembers(clanTag: string, filters?: FilterOptions): Promise<Record<string, unknown>[]> {\n\t\tconst parsed = validateTag(clanTag);\n\t\treturn this.get(`clans/${parsed}/members${this.query(filters)}`);\n\t}\n\n\tpublic clanWar(clanTag: string): Promise<Record<string, unknown>> {\n\t\tconst parsed = validateTag(clanTag);\n\t\treturn this.get(`clans/${parsed}/currentwar`);\n\t}\n\n\tpublic clanWarLog(clanTag: string, filters?: FilterOptions): Promise<Record<string, unknown>[]> {\n\t\tconst parsed = validateTag(clanTag);\n\t\treturn this.get(`clans/${parsed}/warlog${this.query(filters)}`);\n\t}\n\n\tpublic clanWarLeague(clanTag: string): Promise<Record<string, unknown>> {\n\t\tconst parsed = validateTag(clanTag);\n\t\treturn this.get(`clans/${parsed}/currentwar/leaguegroup`);\n\t}\n\n\tpublic clanWarLeagueWar(warTag: string): Promise<Record<string, unknown>> {\n\t\tconst parsed = validateTag(warTag);\n\t\treturn this.get(`clanwarleagues/wars/${parsed}`);\n\t}\n\n\tpublic playerLabels(filters?: FilterOptions): Promise<Record<string, unknown>[]> {\n\t\treturn this.get(`labels/players${this.query(filters)}`);\n\t}\n\n\tpublic clanLabels(filters?: FilterOptions): Promise<Record<string, unknown>[]> {\n\t\treturn this.get(`labels/clans${this.query(filters)}`);\n\t}\n\n\tpublic locations(filters?: FilterOptions): Promise<Record<string, unknown>[]> {\n\t\treturn this.get(`locations${this.query(filters)}`);\n\t}\n\n\tpublic location(locationId: number | string, filters?: FilterOptions): Promise<Record<string, unknown>> {\n\t\treturn this.get(`locations/${locationId}${this.query(filters)}`);\n\t}\n\n\tpublic clanRanks(locationId: number | string, filters?: FilterOptions): Promise<Record<string, unknown>[]> {\n\t\treturn this.get(`locations/${locationId}/rankings/clans${this.query(filters)}`);\n\t}\n\n\tpublic playerRanks(locationId: number | string, filters?: FilterOptions): Promise<Record<string, unknown>[]> {\n\t\treturn this.get(`locations/${locationId}/rankings/players${this.query(filters)}`);\n\t}\n\n\tpublic versusClanRanks(locationId: number | string, filters?: FilterOptions): Promise<Record<string, unknown>[]> {\n\t\treturn this.get(`locations/${locationId}/rankings/clans-versus${this.query(filters)}`);\n\t}\n\n\tpublic versusPlayerRanks(locationId: number | string, filters?: FilterOptions): Promise<Record<string, unknown>[]> {\n\t\treturn this.get(`locations/${locationId}/rankings/players-versus${this.query(filters)}`);\n\t}\n\n\tpublic leagues(filters?: FilterOptions): Promise<Record<string, unknown>[]> {\n\t\treturn this.get(`leagues${this.query(filters)}`);\n\t}\n\n\tpublic league(leagueId: number | string): Promise<Record<string, unknown>> {\n\t\treturn this.get(`leagues/${leagueId}`);\n\t}\n\n\tpublic leagueSeason(leagueId: number | string, filters?: FilterOptions): Promise<Record<string, unknown>> {\n\t\treturn this.get(`leagues/${leagueId}/seasons${this.query(filters)}`);\n\t}\n\n\tpublic leagueRanking(leagueId: number | string, seasonId: number | string): Promise<Record<string, unknown>[]> {\n\t\treturn this.get(`leagues/${leagueId}/seasons/${seasonId}`);\n\t}\n\n\tpublic warLeagues(filters?: FilterOptions): Promise<Record<string, unknown>[]> {\n\t\treturn this.get(`warleagues${this.query(filters)}`);\n\t}\n\n\tpublic warLeague(leagueId: number | string, filters?: FilterOptions): Promise<Record<string, unknown>> {\n\t\treturn this.get(`warleagues/${leagueId}${this.query(filters)}`);\n\t}\n\n\tprivate get(url: string, init?: RequestInit) {\n\t\treturn fetch(`${this.apiURL}${url}`, init).then(res => res.json());\n\t}\n\n\tprivate query(opts: any) {\n\t\treturn `?${qs.stringify(opts)}`;\n\t}\n\n}\n\nexport interface ClientOptions {\n\tapiURL?: string;\n\ttoken: string;\n}\n\nexport interface FilterOptions {\n\tlimit?: number;\n\tafter?: string;\n\tbefore?: string;\n}\n\nexport interface ClanSearchOptions {\n\tname?: string;\n\twarFrequency?: string;\n\tlocationId?: string;\n\tminMembers?: number;\n\tmaxMembers?: number;\n\tminClanPoints?: number;\n\tminClanLevel?: number;\n\tlimit?: number;\n\tafter?: number;\n\tbefore?: number;\n\tlabelIds?: string;\n}\n\nexport interface Player {\n\tname: string;\n\ttag: string;\n\ttownHallLevel: number;\n\ttownHallWeaponLevel?: number;\n\texpLevel: number;\n\ttrophies: number;\n\tbestTrophies: number;\n\twarStars: number;\n\tattackWins: number;\n\tdefenseWins: number;\n\tbuilderHallLevel?: number;\n\tversusTrophies?: number;\n\tbestVersusTrophies?: number;\n\tversusBattleWins?: number;\n\trole?: string;\n\tdonations: number;\n\tdonationsReceived: number;\n\tclan?: {\n\t\ttag: string;\n\t\tname: string;\n\t\tclanLevel: number;\n\t\tbadgeUrls: {\n\t\t\tsmall: string;\n\t\t\tlarge: string;\n\t\t\tmedium: string;\n\t\t};\n\t};\n\tleague?: {\n\t\tid: number;\n\t\tname: string;\n\t\ticonUrls: {\n\t\t\tsmall: string;\n\t\t\ttiny: string;\n\t\t\tmedium: string;\n\t\t};\n\t};\n\tachievements: [{\n\t\tname: string;\n\t\tstars: number;\n\t\tvalue: number;\n\t\ttarget: number;\n\t\tinfo: string;\n\t\tcompletionInfo: string | null;\n\t\tvillage: 'home' | 'builderBase';\n\t}];\n\tlabels: [{\n\t\tid: number;\n\t\tname: string;\n\t\ticonUrls: {\n\t\t\tsmall: string;\n\t\t\tmedium: string;\n\t\t};\n\t}];\n\ttroops: [{\n\t\tname: string;\n\t\tlevel: number;\n\t\tmaxLevel: number;\n\t\tvillage: 'home' | 'builderBase';\n\t}];\n\theroes: [{\n\t\tname: string;\n\t\tlevel: number;\n\t\tmaxLevel: number;\n\t\tvillage: 'home' | 'builderBase';\n\t}];\n\tspells: [{\n\t\tname: string;\n\t\tlevel: number;\n\t\tmaxLevel: number;\n\t\tvillage: 'home' | 'builderBase';\n\t}];\n\t[x: string]: any;\n}\n\nexport interface Clan {\n\ttag: string;\n\tname: string;\n\ttype: string;\n\tdescription: string;\n\tlocation: {\n\t\tlocalizedName: string;\n\t\tid: number;\n\t\tname: string;\n\t\tisCountry: boolean;\n\t\tcountryCode: string;\n\t};\n\tbadgeUrls: {\n\t\tsmall: string;\n\t\tlarge: string;\n\t\tmedium: string;\n\t};\n\tclanLevel: number;\n\tclanPoints: number;\n\tclanVersusPoints: number;\n\trequiredTrophies: number;\n\twarFrequency: string;\n\twarWinStreak: number;\n\twarWins: number;\n\twarTies?: number;\n\twarLosses?: number;\n\tisWarLogPublic: boolean;\n\twarLeague?: {\n\t\tname: string;\n\t\tid: number;\n\t};\n\tmembers: number;\n\tlabels: [{\n\t\tid: number;\n\t\tname: string;\n\t\ticonUrls: {\n\t\t\tsmall: string;\n\t\t\tmedium: string;\n\t\t};\n\t}];\n\tmemberList: [{\n\t\tname: string;\n\t\ttag: string;\n\t\trole: string;\n\t\texpLevel: number;\n\t\tleague: {\n\t\t\tid: number;\n\t\t\tname: string;\n\t\t\ticonUrls: {\n\t\t\t\tsmall: string;\n\t\t\t\ttiny: string;\n\t\t\t\tmedium: string;\n\t\t\t};\n\t\t};\n\t\ttrophies: number;\n\t\tversusTrophies: number;\n\t\tclanRank: number;\n\t\tpreviousClanRank: number;\n\t\tdontaions: number;\n\t\tdonationsReceived: number;\n\t}];\n\t[x: string]: any;\n}\n"]}